<?php

	require "inc/funciones.inc";

	//Inicializa las variables utilizadas en el formulario
 

    //FIN Inicializa las variables utilizadas en el formulario

	//Conectar con el servidor de base de datos
	$conn=conectar_bd();

	//Variables para la búsqueda
   	$date = new DateTime();
   	$anioMesCargaOceane = $date->format('ym'); //AAMM
   	$anioMesCargaTP = $date->format('Ym'); //AAMM
   	$conta = 0;
 
    //$anioMesFact = date('Y-m', strtotime($fechaEnvio));


	$tsql = "SELECT CAST((CONVERT(INT,INCIDENCIAS_REMEDY.NumeroIncidencia)) AS NVARCHAR(15)) AS NUMEROINCIDENCIA, 
		IIF(INCIDENCIAS_REMEDY.[TomadaPorGrupo] IS NULL,'VACIO',
		INCIDENCIAS_REMEDY.[TomadaPorGrupo]) AS TOMADAPORGRUPO, 
		INCIDENCIAS_REMEDY.Grupo AS GRUPO, INCIDENCIAS_REMEDY.GrupoEscalada AS GRUPOESCALADA, GETDATE() AS FHESCALADOTERCEROS,
		INCIDENCIAS_REMEDY.FEC_Fecha_Cierre AS FEC_FECHA_CIERRE, INCIDENCIAS_REMEDY.CAR_FTTH_NumeroCTO AS CAR_FTTH_NUMEROCTO, 
		INCIDENCIAS_REMEDY.SolucionDetallada AS COMENTARIOS, INCIDENCIAS_REMEDY.Estado AS ESTADO, 
		INCIDENCIAS_REMEDY.ServicioI AS SERVICIOI, 
		INCIDENCIAS_REMEDY.TipoI AS TIPOI, INCIDENCIAS_REMEDY.DescripcionI AS DESCRIPCIONI,
		INCIDENCIAS_REMEDY.SintomaI AS SINTOMAI, 
		IIF(INCIDENCIAS_REMEDY.[TomadaPorGrupo]='INVENTARIO FTTH',177,54) AS IDUSUORIGEN,
		INCIDENCIAS_REMEDY.Cliente AS CLIENTE, INCIDENCIAS_REMEDY.ReferenciaExterna AS REFERENCIAEXTERNA,
		INCIDENCIAS_REMEDY.ViaEntradaTicket AS VIAENTRADATICKET
		FROM INCIDENCIAS_REMEDY
		WHERE INCIDENCIAS_REMEDY.ESTADO<>'CANCELADA'";
		
	$stmt = sqlsrv_query( $conn, $tsql);

	if( $stmt === false ){
		die ("Error al ejecutar consulta".$tsql);
	}

	$rows = sqlsrv_has_rows( $stmt );

	if ($rows === true) {					
		
		//Recorrer las incidencias de Remedy cuyo estado sea distinto de CANCELADA
		while($row = sqlsrv_fetch_array($stmt)) {	
			echo "INCIDENCIA: ".$row['NUMEROINCIDENCIA']."<br>";

			//Mira si existe una tarea con ese Remedy, en su caso coge la última, último ID
			$tsqlEsiste = "SELECT TOP 1 INV_TBTAREAS.INCIDENCIA, INV_TBTAREAS.idEst AS ESTADO,
										INV_TBTAREAS.TIPO_INCIDENCIA, INV_TBTAREAS.REF_ASOCIADA
							FROM INV_TBTAREAS 
								INNER JOIN INV_TBSUBACTIVIDAD ON INV_TBTAREAS.ID_SUBACTIVIDAD = INV_TBSUBACTIVIDAD.ID_SUBACTIVIDAD
								INNER JOIN INV_TBACTIVIDAD ON INV_TBSUBACTIVIDAD.ID_ACTIVIDAD = INV_TBACTIVIDAD.ID_ACTIVIDAD
							WHERE INV_TBTAREAS.INCIDENCIA = '".$row['NUMEROINCIDENCIA']."' 
							ORDER BY INV_TBTAREAS.ID DESC";

			echo "COMPRUEBA EXISTENCIA: ".$tsqlEsiste."<br>";				
			$stmtExiste = sqlsrv_query( $conn, $tsqlEsiste);

			if( $stmtExiste === false ){
				die ("Error al ejecutar consulta".$tsqlEsiste);
			}			

			$rowsExiste = sqlsrv_has_rows( $stmtExiste );	

			$ref_asociada = '';

			if ($rowsExiste === true) {	
				$rowExiste = sqlsrv_fetch_array($stmtExiste);							
				// HAY UNA TAREA CON ESE REMEDY en la tabla de tareas
				echo "SIIIIII Esiste:".$row['NUMEROINCIDENCIA']."<br>";

				$ref_asociada = $rowExiste['REF_ASOCIADA'];

				//Si es una incidencia de instalación de cliente o proactiva con estado cerrado se da de alta una
				//tarea nueva con estado pendiente y con la referencia asociada de la que ya existe
				if (($rowExiste['TIPO_INCIDENCIA'] == 'CLIENTE' || $rowExiste['TIPO_INCIDENCIA'] == 'PROACTIVA') && $rowExiste['ESTADO'] == '4') {		//Cerrada
					echo "ENTRAAAAAAAAAA<br>";
					insertarTarea($row, $ref_asociada, $anioMesCargaOceane, $anioMesCargaTP,$conn, $conta);
					$conta = $conta + 1;
				}

				//En el caso de que exista y el stado sea distinta de Cerrada, no se hace nada con ella
				
			} else {
				//NO EXISTE EL REMEDY en la Tabla de Tareas, darla de Alta como pendiente
				echo "NOOOOOO Esiste".$row['NUMEROINCIDENCIA']."<br>";
				insertarTarea($row, $ref_asociada, $anioMesCargaOceane, $anioMesCargaTP,$conn, $conta);												
				$conta = $conta + 1;
			}
	
		}
	}

	sqlsrv_free_stmt( $stmt);	


function insertarTarea($row, $ref_asociada, $anioMesCargaOceane, $anioMesCargaTP,$conn, $conta)
{


	//Incidencia de Instalación
	$usuarioOrigen = '54';
	$ref = round(microtime(true) * 1000) + $conta;

	$fecha_inicio = date_format($row['FHESCALADOTERCEROS'], 'Y-m-d h:m:s.000');
	$fecha_registro = date_format($row['FHESCALADOTERCEROS'], 'Y-m-d h:m:s.000');
	$incidencia = $row['NUMEROINCIDENCIA'];
	$comentarios = $row['COMENTARIOS'];
	$grupo_escalado = $row['GRUPOESCALADA'];

	$subactividad = '60';
	$estado = '1';
	$id_tipo_entrada = '2'; //1 - Web, 2 - Remedy, 3 - Carga Masiva
	$prioridad = '2';

	
	if (empty($ref_asociada)) {
		echo "ref_asociada: ".$ref_asociada."<br>";
		$ref_asociada = $ref;
	}

	$tipo_cliente = 'JAZZTEL';

	switch ($row['CLIENTE']) {
	    case 'CLIENTE DUMMY':
	        $tipo_cliente = 'OSP';
	        break;
	    case 'CLIENTE OSP-OSP':
	        $tipo_cliente = 'OSP';
	        break;
	    case 'VODAFONE DUMMY':
	        $tipo_cliente = 'VODAFONE';
	        $prioridad = '1';
	        break;
	}


	//Referencia Externa  
	$tp = '';
	$ticket_oceane = '';
	
	if (preg_match('/[A-Z]{2}[0-9]{10}/', $row['REFERENCIAEXTERNA'])) {
		$tp = substr($row['REFERENCIAEXTERNA'], 0, 12);
		//$tp = $row['REFERENCIAEXTERNA']; //PPAAAAMMYYYY
	} else {
		if (preg_match('/[0-9]{10}/', $row['REFERENCIAEXTERNA'])) {
			$ticket_oceane = substr($row['REFERENCIAEXTERNA'], 0, 10);
			//$ticket_oceane = $row['REFERENCIAEXTERNA']; //AAMMXXXXXX
		}

	}
	
	$tipo_incidencia = 'CLIENTE';

	switch ($row['TOMADAPORGRUPO']) {
	    case 'INVENTARIO FTTH':
	        $tipo_incidencia = 'PROACTIVA';
	        $prioridad = '3';
	        $usuarioOrigen = '177';
	        break;
	    case 'SSR FTTH':
	    	IF ($row['CLIENTE'] == 'CLIENTE DUMMY' || $row['CLIENTE'] == 'CLIENTE OSP-OSP' || $row['CLIENTE'] == 'VODAFONE DUMMY') {
	    		$tipo_incidencia = 'CLIENTE';
	    	} else {
	    		IF ($row['CLIENTE'] == 'SSR FTTH PROACTIVO' || $row['CLIENTE'] == 'SSR FTTH PROACTIVO 2') {
	    			IF ($row['VIAENTRADATICKET'] == 'FollowUp') {
	    				$tipo_incidencia = 'PROACTIVA';	
	    			} else {
	    				if ($row['TIPOI'] == 'ACCESO' && $ticket_oceane != '') {
	    					$prioridad = '1';
	    				}
	    			}
	    		}
	    	}
	        
	        break;
	    case 'VODAFONE DUMMY':
	        $tipo_incidencia = 'CLIENTE';
	        break;
	}				

	$grupo = '';
	$huella =  '';
	$tecnico = '';
	$tipologia_inicial = '';
	$id_mapeo =  '';

	$tsqlConcatenado = "SELECT TOP 1 *
					FROM INV_TBCONCATENADO
					WHERE INV_TBCONCATENADO.SERVICIO = '".$row['SERVICIOI']."' AND INV_TBCONCATENADO.TIPO = '".
						$row['TIPOI']."' AND INV_TBCONCATENADO.DESCRIPCION = '".$row['DESCRIPCIONI']."' AND
						(INV_TBCONCATENADO.SINTOMA = '".$row['SINTOMAI']."' OR INV_TBCONCATENADO.SINTOMA= 'NULL')
					ORDER BY SERVICIO, TIPO, DESCRIPCION, SINTOMA";
				
	$stmtConcatenado = sqlsrv_query( $conn, $tsqlConcatenado);

	if( $stmtConcatenado === false ){
		die ("Error al ejecutar consulta".$tsqlConcatenado);
	}	

	$rowsConcatenado = sqlsrv_has_rows( $stmtConcatenado );	

	if ($rowsConcatenado === true) {
		$rowConcatenado = sqlsrv_fetch_array($stmtConcatenado);
		$grupo = $rowConcatenado['GRUPO'];
		$huella =  $rowConcatenado['HUELLA'];
		$tecnico = $rowConcatenado['idtecnico'];
		$tipologia_inicial = $rowConcatenado['TIPOLOGIA_INICIAL'];
		$id_mapeo =  $rowConcatenado['ID'];
	}	

	sqlsrv_free_stmt( $stmtConcatenado);

	//INSERTAR UNA NUEVA TAREA PENDIENTE
	//maiteben: Sin fecha de inicio
	// $tsqlInsertar = "INSERT 
	// 				INTO INV_TBTAREAS ( IDEST, IDUSUORIGEN, REF, ID_SUBACTIVIDAD, FECHA_INICIO, FECHA_REGISTRO, 
	// 					INCIDENCIA, COMENTARIOS, PRIORIDAD, GRUPO, GRUPO_ESCALADO, ID_TIPO_ENTRADA, 
	// 					TIPOLOGIA_INICIAL, HUELLA, TIPO_INCIDENCIA, TIPO_CLIENTE, ID_MAPEO, TICKET_OCEANE, TP, REF_ASOCIADA)
	// 				VALUES ('".$estado."', '".$usuarioOrigen."', '".$ref."', '".$subactividad.
	// 					"', convert(datetime, '".$fecha_inicio."', 120), convert(datetime, '".$fecha_registro."', 120), '".
	// 					$incidencia."', '".$comentarios."', '".$prioridad."', '".$grupo."', '".
	// 					$grupo_escalado."', '".$id_tipo_entrada."', '".$tipologia_inicial."', '".$huella.
	// 					"', '".$tipo_incidencia. "', '".$tipo_cliente."', '".$id_mapeo."', '".$ticket_oceane."', '".
	// 					$tp."', '".$ref_asociada."' )";
	
	$tsqlInsertar = "INSERT 
					INTO INV_TBTAREAS ( IDEST, IDUSUORIGEN, REF, ID_SUBACTIVIDAD, FECHA_REGISTRO, 
						INCIDENCIA, COMENTARIOS, PRIORIDAD, GRUPO, GRUPO_ESCALADO, ID_TIPO_ENTRADA, 
						TIPOLOGIA_INICIAL, HUELLA, TIPO_INCIDENCIA, TIPO_CLIENTE, ID_MAPEO, TICKET_OCEANE, TP, REF_ASOCIADA,idTecn)
					VALUES ('".$estado."', '".$usuarioOrigen."', '".$ref."', '".$subactividad.
						"', convert(datetime, '".$fecha_registro."', 120), '".
						$incidencia."', '".$comentarios."', '".$prioridad."', '".$grupo."', '".
						$grupo_escalado."', '".$id_tipo_entrada."', '".$tipologia_inicial."', '".$huella.
						"', '".$tipo_incidencia. "', '".$tipo_cliente."', '".$id_mapeo."', '".$ticket_oceane."', '".
						$tp."', '".$ref_asociada."' , '".$tecnico."' )";

	echo "INSERTA TAREA: ".$tsqlInsertar."<br>";

	$stmtInsertar = sqlsrv_query( $conn, $tsqlInsertar);	

	if( $stmtInsertar === false ) {
	    if( ($errors = sqlsrv_errors() ) != null) {
	        foreach( $errors as $error ) {
	            echo "SQLSTATE: ".$error[ 'SQLSTATE']."<br />";
	            echo "code: ".$error[ 'code']."<br />";
	            echo "message: ".$error[ 'message']."<br />";
	            echo "Consulta: ".$tsqlInsertar."<br />";
	        }
	    }
	}	

	sqlsrv_free_stmt( $stmtInsertar);	

	//CTO

	if ($row['CAR_FTTH_NUMEROCTO']) {
		$cto = $row['CAR_FTTH_NUMEROCTO'];
		$tsqlActualizar = "UPDATE INV_TBTAREAS
							SET INV_TBTAREAS.COD_CABECERA = INV_ACTUACIONES.COD_CABECERA, 
								INV_TBTAREAS.ID_ACTUACION = INV_ACTUACIONES.ID_ACTUACION,
								INV_TBTAREAS.HUELLA = INV_ACTUACIONES.HUELLA,
								INV_TBTAREAS.EEMM = INV_CABECERAS.EEMM
						FROM INV_TBTAREAS
							INNER JOIN INV_CTOS ON '".$cto."' = INV_CTOS.NUMERO
							INNER JOIN INV_ACTUACIONES ON INV_ACTUACIONES.ID_ACTUACION = INV_CTOS.ID_ACTUACION
							INNER JOIN INV_CABECERAS ON INV_CABECERAS.COD_CABECERA = INV_ACTUACIONES.COD_CABECERA
						WHERE INV_TBTAREAS.REF = '".$ref."' ";	
		echo "ACTUALIZA TAREA: ".$tsqlActualizar."<br>";	

		$stmtActualizar = sqlsrv_query( $conn, $tsqlActualizar);

		if( $stmtActualizar === false ){
			die ("Error al ejecutar consulta".$tsqlInsertar);
		}	

		sqlsrv_free_stmt( $stmtActualizar);		

		$tsqlInsertar = "INSERT INTO INV_TBTAREAS_CTO ( ID, ID_GESTOR, COD_CTO, ID_ACTUACION )
							SELECT INV_TBTAREAS.ID, INV_ACTUACIONES.ID_GD, INV_CTOS.COD_CTO, INV_CTOS.ID_ACTUACION
							FROM INV_TBTAREAS 
								INNER JOIN INV_CTOS ON '".$cto."' = INV_CTOS.NUMERO
								INNER JOIN INV_ACTUACIONES ON INV_ACTUACIONES.ID_ACTUACION = INV_CTOS.ID_ACTUACION
							WHERE INV_TBTAREAS.REF = '".$ref."' " ;	
		echo "INSERTA CTO: ".$tsqlInsertar."<br>";	

		$stmtInsertar = sqlsrv_query( $conn, $tsqlInsertar);	

		if( $stmtInsertar === false ) {
		    if( ($errors = sqlsrv_errors() ) != null) {
		        foreach( $errors as $error ) {
		            echo "SQLSTATE: ".$error[ 'SQLSTATE']."<br />";
		            echo "code: ".$error[ 'code']."<br />";
		            echo "message: ".$error[ 'message']."<br />";
		            echo "Consulta: ".$tsqlInsertar."<br />";
		        }
		    }
		}

		sqlsrv_free_stmt( $stmtInsertar);		
		
	}



}	

?>
	